using System;

/*
 Эта задача немного необычна — в ней вам предстоит реализовать интерактивное взаимодействие с тестирующей системой. Это означает, что вы можете делать запросы и получать ответы в online-режиме. 
 Обратите внимание, что ввод/вывод в этой задаче — стандартный (то есть с экрана на экран). После вывода очередного запроса обязательно используйте функции очистки потока, чтобы часть вашего вывода не осталась в каком-нибудь буфере. 
 Например, на С++ надо использовать функцию fflush(stdout), на Java вызов System.out.flush(), на Pascal flush(output) и stdout.flush() для языка Python.

В этой задаче вам предстоит в интерактивном режиме угадать число x, которое загадала тестирующая система. Про загаданное число известно, что оно целое и лежит в границах от 1 до 1 000 000 включительно.

Вы можете делать запросы к тестирующей системе, каждый запрос — это вывод одного целого числа от 1 до 1 000 000. Есть два варианта ответа тестирующей системы на запрос:

строка «<» (без кавычек), если загаданное число меньше числа из запроса;
строка «>=» (без кавычек), если загаданное число больше либо равно числу из запроса.
В случае, если ваша программа считает, что определила загаданное число, выведите строку вида «! x», где x — это ответ, и завершите работу своей программы.

Вашей программе разрешается сделать не более 25 запросов (не считая вывода ответа).

Входные данные
Для чтения ответов на запросы программа должна использовать стандартный ввод.

Входные данные будут содержать ответы на запросы, то есть строки вида «<» и «>=». i-я из этих строк является ответом системы на i-й запрос. После того, как ваша программа угадала число, выведите «! x» (без кавычек), где x — это ответ, и завершите работу своей программы.

Тестирующая система даст вашей программе прочитать ответ на запрос из входных данных только после того, как ваша программа вывела соответствующий запрос системе и выполнила операцию flush.

Выходные данные
Для осуществления запросов программа должна использовать стандартный вывод.

Ваша программа должна выводить запросы — целые числа xi (1≤xi≤10^6) по одному в строке. После вывода каждой строки программа должна выполнить операцию flush.

Каждое из значений xi обозначает очередной запрос к системе. Ответ на запрос программа сможет прочесть из стандартного ввода. В случае, если ваша программа угадала число, выведите строку вида «! x» (без кавычек), где x — ответ, и завершите работу программы.
 
    входные данные
    >=
    <
    >=
    >=
    <
    <
    выходные данные
    8
    20
    11
    12
    13
    16
    ! 12
 */


namespace GuessNumber
{
    class Program
    {
        static void Main(string[] args)
        {
            BinarySearch();
        }

        private static void BinarySearch()
        {
            var left = 0;
            var right = 1000001;
            var middle = 0;

            while (right - left > 1)
            {
                middle = (left + right) / 2;

                Console.WriteLine(middle);
                Console.Out.Flush();
                var xIsBiggerOrEqualThanMiddle = Console.ReadLine() == ">=";

                if (!xIsBiggerOrEqualThanMiddle)
                {
                    right = middle;
                }
                else
                {
                    left = middle;
                }
            }
            
            if (right > 1000000)
            {
                right = 1000000;
            }

            if (left < 1)
            {
                left = 1;
            }
            
            Console.WriteLine(right);
            Console.Out.Flush();
            var xIsSmallerThanRight = Console.ReadLine() == "<";

            Console.WriteLine($"! {(xIsSmallerThanRight ? left : right)}");
        }
    }
}